# include <iostream>
using namespace std;

int main() {
	//利用冒泡排序实现升序序列
	int arr[9] = {4,2,8,0,5,7,1,3,9};

	cout << "排序前： " << endl;
	for (int i = 0; i < 9; i++) {
		cout << arr[i]<< " ";
	}
	cout << endl;
	//开始冒泡排序

	//排序轮次为 元素个数-1
	for (int i = 0; i < 9 - 1; i++) {
		//内层循环：相邻两数对比次数为 元素个数-排序轮次-1
		for (int j = 0; j < 9 - i - 1; j++) {
			if (arr[j] > arr[j + 1]) {
				int temp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = temp;
			}
		}
	}

	cout << "排序后： " << endl;
	for (int i = 0; i < 9; i++) {
		cout << arr[i] << " ";
	}
	cout << endl;
	return 0;
}

/*
//使用指针，数组，函数实现
# include <iostream>
# include "swap.h"
using namespace std;

//冒泡排序函数 参数1：数组首地址 参数2：数组长度
void bubbleSort(int *arr,int len) {
	for (int i = 0; i < len - 1; i++) {
		for (int j = 0; j < len-i-1; j++) {
			if (arr[j] > arr[j + 1]) {
				int temp = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = temp;
			}	
		}
	}
}

//打印数组
void printArray(int* arr, int len) {
	for (int i = 0; i < len; i++) {
		cout << arr[i] << " ";
	}
}
int main() {
    //先创建数组
	int arr[10] = { 4,3,6,9,1,2,10,8,7,5 };
	//数组长度
	int len = sizeof(arr) / sizeof(arr[0]);
	//创建函数，实现冒泡排序
	bubbleSort(arr, len);
	//打印排序后数组
	printArray(arr, len);
	return 0;
}
*/
