stock00.h文件程序：
// stock00.h -- Stock class interface 
# ifndef STOCK00_H 
#define STOCK00_H 
#include <string> 
class Stock // class declaration 
{
private:
    std:: string company; 
    long shares; 
    double share_val; 
    double total_val; 
    void set_tot() { total_val = shares * share_val; }
public:
    void acquire(const std:: string & co, long n, double pr) ; 
    void buy(long num, double price); 
    void sell(long num, double price); 
    void update(double price); 
    void show(); 
};
#endif

stock00.cpp文件程序：
// stockOO.cpp -- implementing the Stock class 
//version 00 
#include <iostream>
#include "stock00.h"
void Stock::acquire(const std:: string & co, long n, double pr){
    company = co; 
    if (n < 0) {
        std::cout << "Number of shares can't be negative;"
        << company << " shares set to 0.\n"; 
        shares = 0; 
    }
    else shares = n; 
    share_val = pr;
    set_tot(); 
}
void Stock::buy(long num, double price){
    if (num < 0){
        std::cout << "Number of shares purchase can't be negative."
        << "Transaction is aborted.\n"; 
    }
    else{
        shares += num; 
        share_val = price; 
        set_tot(); 
    }
}
void Stock::sell(long num, double price){
    using std :: cout; 
    if (num < 0) {
        cout << "Number of shares sold can't be negative."
        << "Transaction is aborted.\n"; 
    }
    else if (num > shares){
        cout << "ou can't sel 1 more than you have!"
        << "Transaction is aborted.\n";
    }
    else{
        shares -= num; 
        share_val = price; 
        set_tot(); 
    }
}
void Stock::update(double price){
    share_val = price; 
    set_tot(); 
}
void Stock::show(){
    std::cout <<"Company: " << company
    <<" Shares: "<< shares << '\n'
    <<" Share Price: $" << share_val
    <<" Total Worth: $" << total_val << '\n';
}

int main(){
    Stock fluffy_the_cat; 
    fluffy_the_cat.acquire("NanoSmart",20,12.50);
    fluffy_the_cat.show();
    fluffy_the_cat.buy(15, 18.125);
    fluffy_the_cat.show ();
    fluffy_the_cat.sell(400, 20.00);
    fluffy_the_cat.show();
    fluffy_the_cat.buy(300000,40.125);
    fluffy_the_cat.show();
    fluffy_the_cat.sell(300000,0.125);
    fluffy_the_cat.show(); 
return 0; 
}
